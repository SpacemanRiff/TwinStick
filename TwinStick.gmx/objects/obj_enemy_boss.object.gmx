<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

default_speed = 2
default_depth = 0

max_health = 100*(obj_supervisor.wave_count/obj_supervisor.boss_wave_every)
current_health = max_health

power_up_drop_rate = 1
multiplier_orb_count = 25
score_value = 1000

has_sight = false
facing_direction = 0

projectile_type = obj_cannon_shell
weapon_fire_sound = snd_cannon
firing_rate = 5
delay_until_shot = 0
delay_between_bursts = 180
delay_until_burst = delay_between_bursts
shots_per_burst = 30
shots_left_in_burst = shots_per_burst

missile_type = obj_missile
missile_fire_sound = snd_missile_firing
missile_rate = 25
delay_until_missile = 0

shooting = false

type = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facing_direction = point_direction(x,y,obj_player.x,obj_player.y)
if(delay_until_burst &lt;= 0){
    if(!collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,true) || shooting){
        if(delay_until_shot == 0){
            shooting = true
            shot = instance_create(x,y,projectile_type)
            shot.direction = facing_direction
            shot.parent_object = id
            shot.hover_height = 2
            delay_until_shot = firing_rate
            
            shots_left_in_burst--
            audio_play_sound_at(weapon_fire_sound,x,y,0,256,512,1,false,1) 
        }
        if(delay_until_missile == 0 &amp;&amp; shooting){
            missile = instance_create(x,y,missile_type)
            missile.direction = facing_direction
            missile.parent_object = id
            missile.hover_height = 2
            delay_until_missile = missile_rate
            
            audio_play_sound_at(missile_fire_sound,x,y,0,256,512,1,false,1) 
        }
        has_sight = true
    }else{
        has_sight = false
    }
    if(shots_left_in_burst &lt;= 0){
        shooting = false
        shots_left_in_burst = shots_per_burst
        delay_until_burst = delay_between_bursts
    }
}

if(delay_until_shot &gt; 0){
    delay_until_shot --
}

if(delay_until_missile &gt; 0){
    delay_until_missile --
}

if(delay_until_burst &gt; 0){
    delay_until_burst --
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!shooting){
    if mp_grid_path(global.grid, path, x, y, obj_player.x, obj_player.y, 1){
        path_start(path, default_speed, 0, 0);  
    }
    //mp_potential_step_object(obj_player.x,obj_player.y,default_speed,obj_wall)
}else{
    path_end()
}

depth = default_depth - y/100000
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(current_health &lt; 1){
    if(random(1) &lt; power_up_drop_rate){
        switch(irandom(4)){
            case 0:
            case 1:
                instance_create(x,y,obj_power_up_health)
                break
            case 2:
                instance_create(x,y,obj_power_up_multi_shot)
                break
            case 3:
                instance_create(x,y,obj_power_up_rof)
                break
            case 4:
                instance_create(x,y,obj_power_up_shield)
                break
        }
    }
    for(i = 0; i &lt; irandom(multiplier_orb_count); i++){        
        instance_create(x+irandom_range(-10,10),y+irandom_range(-10,10),obj_multiplier_orb)
    }
    audio_play_sound_at(snd_enemy_death,x,y,0,256,512,1,false,1) 
    obj_supervisor.score += score_value*obj_supervisor.multiplier
    obj_supervisor.enemy_boss_kills ++
    obj_supervisor.enemy_boss_points += score_value*obj_supervisor.multiplier
    obj_supervisor.enemies_left_in_wave--
    explosion = instance_create(x,y,obj_explosion)
    explosion.image_scale = 2
    if(instance_number(obj_enemy)&lt;=1){
        obj_supervisor.slowdown_timer = obj_supervisor.default_slowdown_timer
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_boss_body_shadow,image_index,x,y,image_xscale,image_yscale,direction,image_blend,image_alpha)
draw_sprite_ext(spr_boss_body,image_index,x+calculate_x_offset(x,y),y+calculate_y_offset(x,y),image_xscale,image_yscale,direction,image_blend,image_alpha)
draw_sprite_ext(spr_boss_cannon_shadow,image_index,x,y,image_xscale,image_yscale,facing_direction,image_blend,image_alpha)
//if(has_sight){
    //draw_set_alpha(0.5)
    //draw_line_width_colour(x+calculate_x_offset(x,y)*2,y+calculate_y_offset(x,y)*2,target.x+calculate_x_offset(target.x,target.y),target.y+calculate_y_offset(target.x,target.y),4,c_red,c_red)
    //draw_set_alpha(1)
//}
draw_sprite_ext(spr_boss_cannon,image_index,x+calculate_x_offset(x,y)*2,y+calculate_y_offset(x,y)*2,image_xscale,image_yscale,facing_direction,image_blend,image_alpha)

draw_sprite_ext(hud_health_bar,floor((current_health*8)/max_health),x,y-48,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
