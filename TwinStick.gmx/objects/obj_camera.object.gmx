<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>default_screen_shake_duration = 4
current_shake_left = default_screen_shake_duration

shake = false

shake_intensity = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>goto_x_sum = obj_player.x * 10
goto_y_sum = obj_player.y * 10
goto_total = 10
with(obj_enemy){
    if(calculate_magnitude(obj_player.x-x,obj_player.y-y) &lt; (view_wview + view_hview)/4){
        distance_multiplier = (((view_wview + view_hview)/4) - calculate_magnitude(obj_player.x-x,obj_player.y-y)) / ((view_wview + view_hview)/4)
        other.goto_total += distance_multiplier
        other.goto_x_sum += x * distance_multiplier
        other.goto_y_sum += y * distance_multiplier
    }
}

goto_x = goto_x_sum / goto_total
goto_y = goto_y_sum / goto_total

mp_potential_step_object(goto_x,goto_y,5,false)

if(shake){
    //if(current_shake_left &gt; 0){
        x += (random_range(0.5,1) * sign(random_range(-1,1))) * shake_intensity * (sqrt(obj_player.shot_count))
        y += (random_range(0.5,1) * sign(random_range(-1,1))) * shake_intensity * (sqrt(obj_player.shot_count))
        //current_shake_left--
    //}else{
        shake = false
        //current_shake_left = default_screen_shake_duration
    //}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
