<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_up = false
move_down = false
move_left = false
move_right = false
default_speed = 5
hspeed_mod = 0
vspeed_mod = 0
firing_rate = 10
max_fire_rate = 15
min_fire_rate = 3
delay_until_shot = 0

hover_height = 5

facing_direction = 0
shooting = false

last_direction_moved = 0

shot_count = 1
max_shot_count = 9

current_health = 8
max_health = 8

default_depth = depth

shield_count = 1
using_shield = false
shield_health = 0
default_shield_health = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(move_down){
    vspeed = default_speed * vspeed_mod
}
if(move_up){
    vspeed = -default_speed * vspeed_mod
}
if(move_right){
    hspeed = default_speed * hspeed_mod
}
if(move_left){
    hspeed = -default_speed * hspeed_mod
}

if(!move_left &amp;&amp; !move_right){
    hspeed = 0
}
if(!move_up &amp;&amp; !move_down){
    vspeed = 0
}

if(abs(vspeed) &gt; 0 || abs(hspeed) &gt; 0){
    last_direction_moved = point_direction(x, y, x + hspeed, y + vspeed)
}

audio_listener_position(x,y,0)

depth = default_depth - y/100000
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_vibration(0,0,0)
if(delay_until_shot &lt;= 0){
    if(shooting){        
        for(i = -floor(shot_count/2); i &lt; ceil(shot_count/2); i++){
            shot = instance_create(x,y,obj_bullet)
            shot.parent_object = id
            shot.direction = facing_direction + ((30 / ceil(shot_count/2)) * i)
            shot.hover_height = hover_height
        } 
        audio_play_sound_at(snd_machine_gun_basic,x,y,0,256,512,1,false,1) 
        delay_until_shot = firing_rate
    }
}

if(delay_until_shot &gt; 0){
    delay_until_shot --
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.current_health--
if(using_shield){    
    shield_health--
    gamepad_set_vibration(0,1,1)
    if(shield_health &lt;= 0){
        using_shield = false
    }
}else{
    current_health--
    gamepad_set_vibration(0,1,1)
    if(current_health &lt;= 0){
        room_restart()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.parent_object != id){
    if(using_shield){    
        shield_health-=other.damage
        gamepad_set_vibration(0,1,1)
        if(shield_health &lt;= 0){
            using_shield = false
        }
    }else{
        current_health-=other.damage
        gamepad_set_vibration(0,1,1)
        if(current_health &lt;= 0){
            room_restart()
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_player_body_shadow,image_index,x,y,image_xscale,image_yscale,last_direction_moved,image_blend,image_alpha)
draw_sprite_ext(spr_player_cannon_shadow,image_index,x,y,image_xscale,image_yscale,facing_direction,image_blend,image_alpha)

draw_sprite_ext(spr_player_body,image_index,x,y-hover_height,image_xscale,image_yscale,last_direction_moved,image_blend,image_alpha)
draw_sprite_ext(spr_player_cannon,image_index,x,y-hover_height,image_xscale,image_yscale,facing_direction,image_blend,image_alpha)

if(using_shield){
    draw_sprite_ext(spr_player_shield,image_index,x,y-hover_height,image_xscale,image_yscale,facing_direction,image_blend,image_alpha)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
