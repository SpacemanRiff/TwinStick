<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>current_choice = 0

max_choice = 2

menu_delay = 15
delay_until_move = 0

rotation_angle = 0

fade_in = instance_create(0,0,fx_fade_in)

gamepad_set_vibration(0,0,0)   

globalvar current_track;
global.current_track = msc_main_menu
audio_play_sound(global.current_track,1,false)
audio_sound_gain(global.current_track, 0, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(fx_fade_out)){
    if(gamepad_is_connected(0)){    
        if(gamepad_axis_value(0, gp_axislv) &gt; 0.25){
            if(delay_until_move &lt;= 0){
                current_choice++
                delay_until_move = menu_delay
            }
        }else if(gamepad_axis_value(0, gp_axislv) &lt; -0.25){
            if(delay_until_move &lt;= 0){
                current_choice--
                delay_until_move = menu_delay
            }
        }else{
            delay_until_move = 0
        }
        
        if(gamepad_button_check_pressed(0,gp_face1)){
            switch(current_choice){
                case 0:
                    fade = instance_create(0,0,fx_fade_out)
                    fade.change_room = arena_easy
                    break;
                case 1:
                    fade = instance_create(0,0,fx_fade_out)
                    fade.change_room = arena_hard
                    break;
                case 2:
                    game_end()
                    break;
            }
        }
        
        if(gamepad_button_check_pressed(0,gp_face4)){
            fade = instance_create(0,0,fx_fade_out)
            fade.change_room = credits
        }
    }else{
        if(keyboard_check(vk_down) || keyboard_check(ord("S"))){
            if(delay_until_move &lt;= 0){
                current_choice++
                delay_until_move = menu_delay
            }
        }else if(keyboard_check(vk_up)|| keyboard_check(ord("W"))){
            if(delay_until_move &lt;= 0){
                current_choice--
                delay_until_move = menu_delay
            }
        }else{
            delay_until_move = 0
        }
        
        if(keyboard_check_pressed(vk_space)|| keyboard_check_pressed(vk_enter)){
            switch(current_choice){
                case 0:
                    fade = instance_create(0,0,fx_fade_out)
                    fade.change_room = arena_easy
                    break;
                case 1:
                    fade = instance_create(0,0,fx_fade_out)
                    fade.change_room = arena_hard
                    break;
                case 2:
                    game_end()
                    break;
            }
        }
    }
    
    if(current_choice &lt; 0){
        current_choice = max_choice
    }
    if(current_choice &gt; max_choice){
        current_choice = 0
    }
    
    if(delay_until_move &gt; 0){
        delay_until_move--
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = (room_width/2 + 224*dcos(rotation_angle))
y = (room_height/2 + 512*dsin(-rotation_angle))

rotation_angle+=0.5
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!audio_is_playing(global.current_track)){
    audio_play_sound(global.current_track,1,false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_menu_controller</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.2)
draw_rectangle_colour(0,0,view_wview,view_hview,c_black,c_black,c_black,c_black,false)
draw_set_alpha(1)

for(i = 0; i &lt;= max_choice; i++){
    if(i == current_choice){
        draw_sprite_ext(menu_items,(i*2)+1,view_wview/2,view_hview/2 - (64*max_choice/2) + 64*i,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
        if(!gamepad_is_connected(0)){
            draw_sprite_ext(hud_space_key,0,view_wview/2 + 150,view_hview/2 - (64*max_choice/2) + 64*i,image_xscale,image_yscale,image_angle,image_blend,image_alpha)        
        }else{
            draw_sprite_ext(hud_a_button,0,view_wview/2 + 100,view_hview/2 - (64*max_choice/2) + 64*i,image_xscale,image_yscale,image_angle,image_blend,image_alpha)        
        }
    }else{
        draw_sprite_ext(menu_items,(i*2),view_wview/2,view_hview/2 - (64*max_choice/2) + 64*i,image_xscale,image_yscale,image_angle,image_blend,image_alpha)    
    }
}

draw_sprite_ext(logo,image_index,view_wview-48,view_hview-48,2,2,image_angle,image_blend,image_alpha)
draw_sprite_ext(hud_y_button,gamepad_button_check(0,gp_face4),view_wview-80,view_hview-48,1,1,image_angle,image_blend,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
