<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_shield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

sprite = spr_enemy_shield
sprite_shadow = spr_enemy_shield_shadow

default_speed = 4
max_health = 1
current_health = max_health

power_up_drop_rate = 0.25

face_path = false

type = 3

shield = instance_create(x,y,obj_shield_enemies)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>total_x = x
total_y = y
total_entries = 1
with(obj_enemy){
    other.total_x += x
    other.total_y += y
    other.total_entries ++
}

average_x = total_x/total_entries
average_y = total_y/total_entries

if(!instance_exists(obj_bomb_decoy)){
    if mp_grid_path(global.grid, path, x, y, average_x, average_y, 1){
        path_start(path, default_speed, 0, 0);  
    }
}else{
    if mp_grid_path(global.grid, path, x, y, instance_nearest(x,y,obj_bomb_decoy).x, instance_nearest(x,y,obj_bomb_decoy).y, 1){
        path_start(path, default_speed, 0, 0);  
    }
}

depth = default_depth - y/100000

shield.x = x
shield.y = y
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(current_health &lt; 1){
    if(random(1) &lt; power_up_drop_rate){
        switch(irandom(6)){
            case 0:
                instance_create(x,y,obj_power_up_multi_shot)
                break
            case 1:
                instance_create(x,y,obj_power_up_rof)
                break
            case 2:
                instance_create(x,y,obj_power_up_shield)
                break
            default:
                instance_create(x,y,obj_power_up_health)
                break
        }
    }
    for(i = 0; i &lt; irandom(multiplier_orb_count); i++){        
        instance_create(x+irandom_range(-10,10),y+irandom_range(-10,10),obj_multiplier_orb)
    }
    audio_play_sound_at(snd_enemy_death,x,y,0,256,512,1,false,1) 
    obj_supervisor.score += score_value*obj_supervisor.multiplier
    switch(type){
        case 0:
            obj_supervisor.enemy_drone_points += score_value*obj_supervisor.multiplier
            obj_supervisor.enemy_drone_kills ++
            break;
        case 1:
            obj_supervisor.enemy_scout_points += score_value*obj_supervisor.multiplier
            obj_supervisor.enemy_scout_kills++
            break;
        case 2:
            obj_supervisor.enemy_tank_points += score_value*obj_supervisor.multiplier
            obj_supervisor.enemy_tank_kills ++
            break;
    }
    obj_supervisor.enemies_left_in_wave--
    explosion = instance_create(x,y,obj_explosion)
    instance_destroy()
    with(shield){
        instance_destroy()
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
