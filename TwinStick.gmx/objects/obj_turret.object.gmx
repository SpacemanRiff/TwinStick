<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_turret_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facing_direction = 0
cannon_height = 1
body_height = cannon_height/2

firing_rate = 20
delay_until_shot = 0

depth = depth - y/100000

has_sight = false
destroyed = false

body_sprite = spr_turret_body
body_sprite_shadow = spr_turret_body_shadow
weapon_sprite = spr_turret_cannon
weapon_sprite_shadow = spr_turret_cannon_shadow

target = obj_player
projectile_type = obj_cannon_shell
weapon_fire_sound = snd_cannon
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!destroyed &amp;&amp; instance_exists(target)){
    facing_direction = point_direction(x,y,target.x,target.y)
    if(!collision_line(x,y,target.x,target.y,obj_wall,false,true)){
        if(delay_until_shot == 0){
            shot = instance_create(x,y,projectile_type)
            shot.direction = facing_direction
            shot.parent_object = id
            shot.hover_height = cannon_height
            delay_until_shot = firing_rate
            audio_play_sound_at(weapon_fire_sound,x,y,0,256,512,1,false,1) 
        }
        has_sight = true
    }else{
        has_sight = false
    }
    
    if(delay_until_shot &gt; 0){
        delay_until_shot --
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(body_sprite_shadow,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
draw_sprite_ext(body_sprite,image_index,x+calculate_x_offset(x,y)*body_height,y+calculate_y_offset(x,y)*body_height,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
if(!destroyed){
    draw_sprite_ext(weapon_sprite_shadow,image_index,x,y,image_xscale,image_yscale,facing_direction,image_blend,image_alpha)
    if(has_sight &amp;&amp; instance_exists(target)){
        draw_set_alpha(0.5)
        draw_line_width_colour(x+calculate_x_offset(x,y)*cannon_height,y+calculate_y_offset(x,y)*cannon_height,target.x+calculate_x_offset(target.x,target.y)*target.hover_height,target.y+calculate_y_offset(target.x,target.y)*target.hover_height,2,c_red,c_red)
        draw_set_alpha(1)
    }
    draw_sprite_ext(weapon_sprite,image_index,x+calculate_x_offset(x,y)*cannon_height,y+calculate_y_offset(x,y)*cannon_height,image_xscale,image_yscale,facing_direction,image_blend,image_alpha)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
